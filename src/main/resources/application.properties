hystrix.command.default.circuitBreaker.requestVolumeThreshold=5
#por defecto 20 request
hystrix.command.default.circuitBreaker.sleepWindowInMilliseconds=20000
#por defecto 5000ms
hystrix.command.default.circuitBreaker.errorThresholdPercentage=50
#por defecto 50%

customprop.vercambiosdeconfig= Saludo

#By default, Eureka uses the client heartbeat to determine if a client is up. Unless specified otherwise, the Discovery Client does not propagate the current health check status of the application, per the Spring Boot Actuator. Consequently, after successful registration, Eureka always announces that the application is in 'UP' state. This behavior can be altered by enabling Eureka health checks, which results in propagating application status to Eureka. As a consequence, every other application does not send traffic to applications in states other then 'UP'. The following example shows how to enable health checks for the client
eureka.client.healthcheck.enabled= true

#30s por defecto para el descubrimiento, hasta 3x30 (3 heartbeats) para concluir con su registro e identificación por el resto
eureka.instance.leaseRenewalIntervalInSeconds= 30

#ver el status de CB en health
management.endpoint.health.show-details: ALWAYS
